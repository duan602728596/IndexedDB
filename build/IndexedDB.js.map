{"version":3,"sources":["IndexedDB.js"],"names":["factory","window","_window","getRange","range","result","test","IDBKeyRange","lowerBound","Number","match","upperBound","v0","v1","isOpen0","isOpen1","bound","IndexedDB","name","version","callbackObject","prototype","indexeddb","Init","_funIng","indexedDB","webkitIndexedDB","mozIndexedDB","msIndexedDB","deleteDatabase","databaseName","console","log","db","request","open","_requestSuccess","event","success","target","call","_requestError","error","message","_requestUpgradeneeded","upgradeneeded","close","time","setTimeout","hasObjectStore","objectStoreName","objectStoreNames","contains","createObjectStore","keyPath","indexArray","store","i","j","length","createIndex","index","unique","deleteObjectStore","getObjectStore","writeAble","ObjectStore","addEventListener","bind","wa","transaction","objectStore","add","obj","Array","put","delete","value","clear","get","callback","g","cursor","indexName","arguments","openCursor"],"mappings":";;;;AAAA,CAAC,UAACA,OAAD,EAAW;AACRA,YAAQC,MAAR,EADQ,CACS;AACpB,CAFD,EAEG,UAACC,OAAD,EAAW;AACV;;;;;;;;;;;;;;AAcA,aAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,YAAIC,SAAS,IAAb;;AAEA,YAAG,OAAOD,KAAP,KAAiB,QAApB,EAA6B;AACzBC,qBAASD,KAAT;AACH,SAFD,MAEM,IAAG,OAAOA,KAAP,KAAiB,QAApB,EAA6B;AAC/B;;AAEA;AACA,gBAAG,+BAA+BE,IAA/B,CAAoCF,KAApC,CAAH,EAA+C;AAC3CC,yBAASE,YAAYC,UAAZ,CAAuBC,OAAOL,MAAMM,KAAN,CAAY,kBAAZ,EAAgC,CAAhC,CAAP,CAAvB,EAAmE,IAAnE,CAAT;AACH;;AAED;AAJA,iBAKK,IAAG,mCAAmCJ,IAAnC,CAAwCF,KAAxC,CAAH,EAAmD;AACpDC,6BAASE,YAAYC,UAAZ,CAAuBC,OAAOL,MAAMM,KAAN,CAAY,kBAAZ,EAAgC,CAAhC,CAAP,CAAvB,CAAT;AACH;;AAED;AAJK,qBAKA,IAAG,+BAA+BJ,IAA/B,CAAoCF,KAApC,CAAH,EAA+C;AAChDC,iCAASE,YAAYI,UAAZ,CAAuBF,OAAOL,MAAMM,KAAN,CAAY,kBAAZ,EAAgC,CAAhC,CAAP,CAAvB,EAAmE,IAAnE,CAAT;AACH;;AAED;AAJK,yBAKA,IAAG,mCAAmCJ,IAAnC,CAAwCF,KAAxC,CAAH,EAAmD;AACpDC,qCAASE,YAAYI,UAAZ,CAAuBF,OAAOL,MAAMM,KAAN,CAAY,kBAAZ,EAAgC,CAAhC,CAAP,CAAvB,CAAT;AACH;;AAED;AAJK,6BAKA,IAAG,oEAAoEJ,IAApE,CAAyEF,KAAzE,CAAH,EAAmF;AAAA,mDACnEA,MAAMM,KAAN,CAAY,kBAAZ,CADmE;AAAA;AAAA,oCAC7EE,EAD6E;AAAA,oCACzEC,EADyE;;AAAA,oCAE/EC,OAF+E,GAE1D,KAF0D;AAAA,oCAEtEC,OAFsE,GAEnD,KAFmD;;AAIpF;;AAEA,oCAAG,WAAWT,IAAX,CAAgBF,KAAhB,CAAH,EAA0B;AACtBU,8CAAU,IAAV;AACH;;AAED,oCAAG,WAAWR,IAAX,CAAgBF,KAAhB,CAAH,EAA0B;AACtBW,8CAAU,IAAV;AACH;;AAEDV,yCAASE,YAAYS,KAAZ,CAAkBP,OAAOG,EAAP,CAAlB,EAA8BH,OAAOI,EAAP,CAA9B,EAA0CC,OAA1C,EAAmDC,OAAnD,CAAT;AACH,6BAfI,MAiBD;AACAV,yCAASD,KAAT;AACH;AACJ;;AAED,eAAOC,MAAP;AACH;;AAED;;;;;;;;;;;;AAYA,aAASY,SAAT,CAAmBC,IAAnB,EAAyBC,OAAzB,EAAsD;AAAA,YAApBC,cAAoB,uEAAH,EAAG;;;AAElDH,kBAAUI,SAAV,CAAoBC,SAApB,GAAgCL,UAAUK,SAA1C;AACAL,kBAAUI,SAAV,CAAoBE,IAApB,CAAyBF,SAAzB,GAAqCJ,UAAUI,SAA/C;;AAEA;AACA,eAAO,IAAIJ,UAAUI,SAAV,CAAoBE,IAAxB,CAA6BL,IAA7B,EAAmCC,OAAnC,EAA4CC,cAA5C,CAAP;AACH;;AAEDH,cAAUO,OAAV,GAAoB,KAApB,CA1FU,CA0FiB;;AAE3B;AACAP,cAAUK,SAAV,GAAsBpB,QAAQuB,SAAR,IACCvB,QAAQwB,eADT,IAECxB,QAAQyB,YAFT,IAGCzB,QAAQ0B,WAH/B;;AAKA;;;;;AAKAX,cAAUY,cAAV,GAA2B,UAASC,YAAT,EAAsB;AAC7Cb,kBAAUK,SAAV,CAAoBO,cAApB,CAAmCC,YAAnC;AACAC,gBAAQC,GAAR,CAAY,WAAWF,YAAX,GAA0B,GAAtC;AACH,KAHD;;AAKA;;AAEA;;;;;;;AAOAb,cAAUI,SAAV,CAAoBE,IAApB,GAA2B,UAAUL,IAAV,EAAgBC,OAAhB,EAAyBC,cAAzB,EAAwC;;AAE/D;AACA,aAAKF,IAAL,GAAYA,IAAZ;AACA,aAAKC,OAAL,GAAeA,OAAf;AACA,aAAKC,cAAL,GAAsBA,cAAtB;AACA,aAAKa,EAAL,GAAU,IAAV;;AAEA;AACA,aAAKC,OAAL,GAAe,KAAKZ,SAAL,CAAea,IAAf,CAAoBjB,IAApB,EAA0BC,OAA1B,CAAf;;AAGA;AACA,aAAKiB,eAAL,GAAuB,UAASC,KAAT,EAAe;AAClCN,oBAAQC,GAAR,CAAY,UAAZ;AACA,gBAAG,KAAKZ,cAAL,CAAoBkB,OAAvB,EAA+B;AAC3B,qBAAKL,EAAL,GAAUI,MAAME,MAAN,CAAalC,MAAvB;AACA,qBAAKe,cAAL,CAAoBkB,OAApB,CAA4BE,IAA5B,CAAiC,IAAjC,EAAuCH,MAAME,MAA7C;AACH;AACJ,SAND;;AAQA;AACA,aAAKE,aAAL,GAAqB,UAASJ,KAAT,EAAe;AAChCN,oBAAQC,GAAR,CAAY,UAAZ;AACA,gBAAG,KAAKZ,cAAL,CAAoBsB,KAAvB,EAA6B;AACzBX,wBAAQC,GAAR,CAAYK,MAAME,MAAN,CAAaG,KAAb,CAAmBC,OAA/B;AACA,qBAAKvB,cAAL,CAAoBsB,KAApB,CAA0BF,IAA1B,CAA+B,IAA/B,EAAqCH,MAAME,MAAN,CAAaG,KAAlD;AACH;AACJ,SAND;;AAQA;AACA,aAAKE,qBAAL,GAA6B,UAASP,KAAT,EAAe;AACxCN,oBAAQC,GAAR,CAAY,UAAZ;AACA,gBAAG,KAAKZ,cAAL,CAAoByB,aAAvB,EAAqC;AACjC,qBAAKZ,EAAL,GAAUI,MAAME,MAAN,CAAalC,MAAvB;AACA,qBAAKe,cAAL,CAAoByB,aAApB,CAAkCL,IAAlC,CAAuC,IAAvC,EAA6CH,MAAME,MAAnD;AACH;AACJ,SAND;;AAQA;;;;;AAKA,aAAKO,KAAL,GAAa,YAAoB;AAAA;;AAAA,gBAAXC,IAAW,uEAAJ,GAAI;;AAC7B,gBAAMD,QAAQ,SAARA,KAAQ,GAAI;AACd,oBAAG7B,UAAUO,OAAV,KAAsB,IAAzB,EAA8B;AACzB,0BAAKS,EAAL,CAAQa,KAAR;AACAf,4BAAQC,GAAR,CAAY,QAAZ;AACJ,iBAHD,MAGK;AACDgB,+BAAWF,KAAX,EAAkBC,IAAlB;AACH;AACJ,aAPD;AAQAC,uBAAWF,KAAX,EAAkBC,IAAlB;AACH,SAVD;;AAYA;;;;;;AAMA,aAAKE,cAAL,GAAsB,UAASC,eAAT,EAAyB;AAC3C,mBAAO,KAAKjB,EAAL,CAAQkB,gBAAR,CAAyBC,QAAzB,CAAkCF,eAAlC,CAAP;AACH,SAFD;;AAIA;;;;;;;AAOA,aAAKG,iBAAL,GAAyB,UAASH,eAAT,EAA0BI,OAA1B,EAAmCC,UAAnC,EAA8C;AACnE,gBAAG,CAAC,KAAKN,cAAL,CAAoBC,eAApB,CAAJ,EAAyC;AACrC,oBAAMM,QAAQ,KAAKvB,EAAL,CAAQoB,iBAAR,CAA0BH,eAA1B,EAA2C;AACrDI,6BAASA;AAD4C,iBAA3C,CAAd;;AAIA,oBAAGC,UAAH,EAAc;AACV,yBAAI,IAAIE,IAAI,CAAR,EAAWC,IAAIH,WAAWI,MAA9B,EAAsCF,IAAIC,CAA1C,EAA6CD,GAA7C,EAAiD;AAC7CD,8BAAMI,WAAN,CACIL,WAAWE,CAAX,EAAcvC,IADlB,EACyB;AACrBqC,mCAAWE,CAAX,EAAcI,KAFlB,EAEyB;AACrB,0BAAsB;AAClBC,oCAAQP,WAAWE,CAAX,EAAcK,MAAd,GAAuBP,WAAWE,CAAX,EAAcK,MAArC,GAA8C;AAD1D,yBAHJ;AAMH;AACJ;;AAED/B,wBAAQC,GAAR,CAAY,sBAAsBkB,eAAtB,GAAwC,GAApD;AACH,aAjBD,MAiBK;AACDnB,wBAAQC,GAAR,CAAY,iBAAiBkB,eAAjB,GAAmC,MAA/C;AACH;AACD,mBAAO,IAAP;AACH,SAtBD;;AAwBA;;;;;;AAMA,aAAKa,iBAAL,GAAyB,UAASb,eAAT,EAAyB;AAC9C,gBAAG,CAAC,KAAKD,cAAL,CAAoBC,eAApB,CAAJ,EAAyC;AACrC,qBAAKjB,EAAL,CAAQ8B,iBAAR,CAA0Bb,eAA1B;AACAnB,wBAAQC,GAAR,CAAY,sBAAsBkB,eAAtB,GAAwC,GAApD;AACH,aAHD,MAGK;AACDnB,wBAAQC,GAAR,CAAY,iBAAiBkB,eAAjB,GAAmC,MAA/C;AACH;AACD,mBAAO,IAAP;AACH,SARD;;AAUA;;;;;;AAMA,aAAKc,cAAL,GAAsB,UAASd,eAAT,EAA2C;AAAA,gBAAjBe,SAAiB,uEAAL,IAAK;;AAC7D,mBAAO,IAAIC,WAAJ,CAAgB,KAAKjC,EAArB,EAAyBiB,eAAzB,EAA0Ce,SAA1C,CAAP;AACH,SAFD;;AAIA;AACA,aAAK/B,OAAL,CAAaiC,gBAAb,CAA8B,SAA9B,EAAyC,KAAK/B,eAAL,CAAqBgC,IAArB,CAA0B,IAA1B,CAAzC,EAA0E,KAA1E;AACA,aAAKlC,OAAL,CAAaiC,gBAAb,CAA8B,OAA9B,EAAuC,KAAK1B,aAAL,CAAmB2B,IAAnB,CAAwB,IAAxB,CAAvC,EAAsE,KAAtE;AACA,aAAKlC,OAAL,CAAaiC,gBAAb,CAA8B,eAA9B,EAA+C,KAAKvB,qBAAL,CAA2BwB,IAA3B,CAAgC,IAAhC,CAA/C,EAAsF,KAAtF;;AAEA;AACA,eAAO,IAAP;AAEH,KAnID;;AAsIA;;AAEA;AACA,aAASF,WAAT,CAAqBjC,EAArB,EAAyBiB,eAAzB,EAA0Ce,SAA1C,EAAoD;;AAEhD,aAAKhC,EAAL,GAAUA,EAAV;;AAEA,YAAMoC,KAAKJ,cAAc,IAAd,GAAqB,WAArB,GAAmC,UAA9C;AACA,YAAMK,cAAc,KAAKrC,EAAL,CAAQqC,WAAR,CAAoBpB,eAApB,EAAqCmB,EAArC,CAApB;;AAEA,aAAKb,KAAL,GAAac,YAAYC,WAAZ,CAAwBrB,eAAxB,CAAb;;AAEA,eAAO,IAAP;AACH;;AAED;;;;;AAKAgB,gBAAY7C,SAAZ,CAAsBmD,GAAtB,GAA4B,UAASC,GAAT,EAAa;AACrCxD,kBAAUO,OAAV,GAAoB,IAApB;AACAiD,cAAMA,eAAeC,KAAf,GAAuBD,GAAvB,GAA6B,CAACA,GAAD,CAAnC;AACA,aAAI,IAAIhB,IAAI,CAAR,EAAWC,IAAIe,IAAId,MAAJ,GAAa,CAAhC,EAAmCF,KAAKC,CAAxC,EAA2CD,GAA3C,EAA+C;AAC3C,iBAAKD,KAAL,CAAWgB,GAAX,CAAeC,IAAIhB,CAAJ,CAAf;AACA,gBAAGA,KAAKC,CAAR,EAAU;AACN3B,wBAAQC,GAAR,CAAY,QAAZ;AACAf,0BAAUO,OAAV,GAAoB,KAApB;AACH;AACJ;AACD,eAAO,IAAP;AACH,KAXD;;AAaA;;;;;AAKA0C,gBAAY7C,SAAZ,CAAsBsD,GAAtB,GAA4B,UAASF,GAAT,EAAa;AACrCxD,kBAAUO,OAAV,GAAoB,IAApB;AACAiD,cAAMA,eAAeC,KAAf,GAAuBD,GAAvB,GAA6B,CAACA,GAAD,CAAnC;AACA,aAAI,IAAIhB,IAAI,CAAR,EAAWC,IAAIe,IAAId,MAAJ,GAAa,CAAhC,EAAmCF,KAAKC,CAAxC,EAA2CD,GAA3C,EAA+C;AAC3C,iBAAKD,KAAL,CAAWmB,GAAX,CAAeF,IAAIhB,CAAJ,CAAf;AACA,gBAAGA,KAAKC,CAAR,EAAU;AACN3B,wBAAQC,GAAR,CAAY,QAAZ;AACAf,0BAAUO,OAAV,GAAoB,KAApB;AACH;AACJ;AACD,eAAO,IAAP;AACH,KAXD;;AAaA;;;;;AAKA0C,gBAAY7C,SAAZ,CAAsBuD,MAAtB,GAA+B,UAASC,KAAT,EAAe;AAC1C5D,kBAAUO,OAAV,GAAoB,IAApB;AACAqD,gBAAQA,iBAAiBH,KAAjB,GAAyBG,KAAzB,GAAiC,CAACA,KAAD,CAAzC;AACA,aAAI,IAAIpB,IAAI,CAAR,EAAWC,IAAImB,MAAMlB,MAAN,GAAe,CAAlC,EAAqCF,KAAKC,CAA1C,EAA6CD,GAA7C,EAAiD;AAC7C,iBAAKD,KAAL,CAAWoB,MAAX,CAAkBC,MAAMpB,CAAN,CAAlB;AACA,gBAAGA,KAAKC,CAAR,EAAU;AACN3B,wBAAQC,GAAR,CAAY,QAAZ;AACAf,0BAAUO,OAAV,GAAoB,KAApB;AACH;AACJ;AACD,eAAO,IAAP;AACH,KAXD;;AAaA;AACA0C,gBAAY7C,SAAZ,CAAsByD,KAAtB,GAA8B,UAASD,KAAT,EAAe;AACzC,aAAKrB,KAAL,CAAWsB,KAAX;AACA/C,gBAAQC,GAAR,CAAY,QAAZ;AACA,eAAO,IAAP;AACH,KAJD;;AAMA;;;;;;AAMAkC,gBAAY7C,SAAZ,CAAsB0D,GAAtB,GAA4B,UAASF,KAAT,EAAgBG,QAAhB,EAAyB;AACjD,YAAMC,IAAI,KAAKzB,KAAL,CAAWuB,GAAX,CAAeF,KAAf,CAAV;;AAEA,iBAASvC,OAAT,CAAiBD,KAAjB,EAAuB;AACnB,gBAAG2C,QAAH,EAAY;AACRA,yBAASxC,IAAT,CAAc,IAAd,EAAoBH,MAAME,MAAN,CAAalC,MAAjC,EAAyCgC,MAAME,MAA/C;AACH;AACJ;;AAED0C,UAAEd,gBAAF,CAAmB,SAAnB,EAA8B7B,QAAQ8B,IAAR,CAAa,IAAb,CAA9B,EAAkD,KAAlD;;AAEA,eAAO,IAAP;AACH,KAZD;;AAcA;;;;;;;;;;AAUAF,gBAAY7C,SAAZ,CAAsB6D,MAAtB,GAA+B,UAASC,SAAT,CAAmB,sBAAnB,EAA0C;;AAErE,YAAMH,WAAW,OAAOI,UAAU,CAAV,CAAP,KAAwB,UAAxB,GAAqCA,UAAU,CAAV,CAArC,GAAoDA,UAAU,CAAV,CAArE;;AAEA,YAAMvB,QAAQ,KAAKL,KAAL,CAAWK,KAAX,CAAiBsB,SAAjB,CAAd;AACA,YAAM/E,QAAQgF,UAAU,CAAV,IAAejF,SAASiF,UAAU,CAAV,CAAT,CAAf,GAAwC,IAAtD;AACA,YAAMF,SAAS9E,UAAU,IAAV,GAAiByD,MAAMwB,UAAN,EAAjB,GAAsCxB,MAAMwB,UAAN,CAAiBjF,KAAjB,CAArD;;AAGA,iBAASkC,OAAT,CAAiBD,KAAjB,EAAuB;AACnB,gBAAG2C,QAAH,EAAY;AACRA,yBAASxC,IAAT,CAAc,IAAd,EAAoBH,MAAME,MAAN,CAAalC,MAAjC,EAAyCgC,MAAME,MAA/C;AACH;AACJ;;AAED2C,eAAOf,gBAAP,CAAwB,SAAxB,EAAmC7B,QAAQ8B,IAAR,CAAa,IAAb,CAAnC,EAAuD,KAAvD;;AAEA,eAAO,IAAP;AACH,KAlBD;;AAoBAlE,YAAQe,SAAR,GAAoBA,SAApB;AACH,CA5XD","file":"IndexedDB.js","sourcesContent":["((factory)=>{\r\n    factory(window); // 函数工厂\r\n})((_window)=>{\r\n    /**\r\n     * 获取IDBKeyRange\r\n     * 根据字符串返回游标查询的范围，例如：\r\n     * '5'      等于\r\n     * '>  5'   大于\r\n     * '>= 5'   大于等于\r\n     * '<  5'   小于\r\n     * '<= 5'   小于等于\r\n     * '[5, 8]' 闭区间\r\n     * '(5, 8)' 开区间\r\n     * @param {String} range: 传递字符串\r\n     * @return\r\n     *\r\n     */\r\n    function getRange(range) {\r\n        let result = null;\r\n\r\n        if(typeof range === 'number'){\r\n            result = range;\r\n        }else if(typeof range === 'string'){\r\n            // 对字符串进行判断\r\n\r\n            // 大于\r\n            if(/^\\s*>\\s*(-?\\d+(\\.\\d+)?)\\s*$/i.test(range)) {\r\n                result = IDBKeyRange.lowerBound(Number(range.match(/(-?\\d+(\\.\\d+)?)/g)[0]), true);\r\n            }\r\n\r\n            // 大于等于\r\n            else if(/^\\s*>\\s*=\\s*(-?\\d+(\\.\\d+)?)\\s*$/i.test(range)) {\r\n                result = IDBKeyRange.lowerBound(Number(range.match(/(-?\\d+(\\.\\d+)?)/g)[0]),);\r\n            }\r\n\r\n            // 小于\r\n            else if(/^\\s*<\\s*(-?\\d+(\\.\\d+)?)\\s*$/i.test(range)) {\r\n                result = IDBKeyRange.upperBound(Number(range.match(/(-?\\d+(\\.\\d+)?)/g)[0]), true);\r\n            }\r\n\r\n            // 小于等于\r\n            else if(/^\\s*<\\s*=\\s*(-?\\d+(\\.\\d+)?)\\s*$/i.test(range)) {\r\n                result = IDBKeyRange.upperBound(Number(range.match(/(-?\\d+(\\.\\d+)?)/g)[0]));\r\n            }\r\n\r\n            // 判断区间\r\n            else if(/^\\s*[\\[\\(]\\s*(-?\\d+(\\.\\d+)?)\\s*\\,\\s*(-?\\d+(\\.\\d+)?)\\s*[\\]\\)]\\s*$/i.test(range)){\r\n                const [v0, v1] = range.match(/(-?\\d+(\\.\\d+)?)/g);\r\n                let [isOpen0, isOpen1] = [false, false];\r\n\r\n                // 判断左右开区间和闭区间\r\n\r\n                if(/^.*\\(.*$/.test(range)){\r\n                    isOpen0 = true;\r\n                }\r\n\r\n                if(/^.*\\).*$/.test(range)){\r\n                    isOpen1 = true;\r\n                }\r\n\r\n                result = IDBKeyRange.bound(Number(v0), Number(v1), isOpen0, isOpen1);\r\n            }\r\n\r\n            else{\r\n                result = range;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * IndexedDB\r\n     * @param {String} name          : 创建或者连接的数据库名\r\n     * @param {Number} version       : 数据库版本号\r\n     * @param {Object} callbackObject: 配置回调函数\r\n     * callbackObject用来配置创建或者连接数据库的回调函数\r\n     * success：创建或者连接的数据库成功后的回调函数\r\n     * error：创建或者连接的数据库失败后的回调函数\r\n     * upgradeneeded：数据库版本号更新后的回调函数\r\n     *\r\n     */\r\n\r\n    function IndexedDB(name, version, callbackObject = {}){\r\n\r\n        IndexedDB.prototype.indexeddb = IndexedDB.indexeddb;\r\n        IndexedDB.prototype.Init.prototype = IndexedDB.prototype;\r\n\r\n        // 返回实例\r\n        return new IndexedDB.prototype.Init(name, version, callbackObject);\r\n    }\r\n\r\n    IndexedDB._funIng = false; // 是否有事件执行\r\n\r\n    /* 兼容不同浏览器 */\r\n    IndexedDB.indexeddb = _window.indexedDB\r\n                        || _window.webkitIndexedDB\r\n                        || _window.mozIndexedDB\r\n                        || _window.msIndexedDB;\r\n\r\n    /**\r\n     * 删除数据库\r\n     * @param {String} databaseName: 数据库名\r\n     *\r\n     */\r\n    IndexedDB.deleteDatabase = function(databaseName){\r\n        IndexedDB.indexeddb.deleteDatabase(databaseName);\r\n        console.log('删除数据库：' + databaseName + '。');\r\n    };\r\n\r\n    /* IndexedDB.prototype.Init */\r\n\r\n    /**\r\n     * 初始化\r\n     * @param {String} name          : 创建或者连接的数据库名\r\n     * @param {Number} version       : 数据库版本号\r\n     * @param {Object} callbackObject: 配置回调函数\r\n     *\r\n     */\r\n    IndexedDB.prototype.Init = function (name, version, callbackObject){\r\n\r\n        // 数据库的名字、版本，回调函数、表\r\n        this.name = name;\r\n        this.version = version;\r\n        this.callbackObject = callbackObject;\r\n        this.db = null;\r\n\r\n        // 创建或者打开数据库\r\n        this.request = this.indexeddb.open(name, version);\r\n\r\n\r\n        // 打开数据库成功\r\n        this._requestSuccess = function(event){\r\n            console.log('打开数据库成功！');\r\n            if(this.callbackObject.success){\r\n                this.db = event.target.result;\r\n                this.callbackObject.success.call(this, event.target);\r\n            }\r\n        };\r\n\r\n        // 打开数据库失败\r\n        this._requestError = function(event){\r\n            console.log('打开数据库失败！');\r\n            if(this.callbackObject.error){\r\n                console.log(event.target.error.message);\r\n                this.callbackObject.error.call(this, event.target.error);\r\n            }\r\n        };\r\n\r\n        // 更新数据库版本\r\n        this._requestUpgradeneeded = function(event){\r\n            console.log('数据库版本更新！');\r\n            if(this.callbackObject.upgradeneeded){\r\n                this.db = event.target.result;\r\n                this.callbackObject.upgradeneeded.call(this, event.target);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * xx秒后关闭数据库\r\n         * @param {Number} time: 延迟关闭的时间\r\n         *\r\n         */\r\n        this.close = function(time = 100){\r\n            const close = ()=>{\r\n                if(IndexedDB._funIng === true){\r\n                     this.db.close();\r\n                     console.log('数据库关闭。');\r\n                }else{\r\n                    setTimeout(close, time);\r\n                }\r\n            };\r\n            setTimeout(close, time);\r\n        };\r\n\r\n        /**\r\n         * 判断是否有ObjectStore\r\n         * @param {String} objectStoreName: ObjectStore名字\r\n         * @return {Boolean}\r\n         *\r\n         */\r\n        this.hasObjectStore = function(objectStoreName){\r\n            return this.db.objectStoreNames.contains(objectStoreName);\r\n        };\r\n\r\n        /**\r\n         * 创建ObjectStore\r\n         * @param {String} objectStoreName: ObjectStore名字\r\n         * @param {String} keyPath        : ObjectStore关键字\r\n         * @param {Array} indexArray      : 添加索引和键值，name -> 索引， age -> 键值\r\n         *\r\n         */\r\n        this.createObjectStore = function(objectStoreName, keyPath, indexArray){\r\n            if(!this.hasObjectStore(objectStoreName)){\r\n                const store = this.db.createObjectStore(objectStoreName, {\r\n                    keyPath: keyPath\r\n                });\r\n\r\n                if(indexArray){\r\n                    for(let i = 0, j = indexArray.length; i < j; i++){\r\n                        store.createIndex(\r\n                            indexArray[i].name,  // 索引\r\n                            indexArray[i].index, // 键值\r\n                            {                     // 索引是否唯一\r\n                                unique: indexArray[i].unique ? indexArray[i].unique : false\r\n                            });\r\n                    }\r\n                }\r\n\r\n                console.log('创建了新的ObjectStore：' + objectStoreName + '。');\r\n            }else{\r\n                console.log('ObjectStore：' + objectStoreName + '已存在。');\r\n            }\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 删除ObjectStore\r\n         * @param {String} objectStoreName: ObjectStore名字\r\n         *\r\n         */\r\n\r\n        this.deleteObjectStore = function(objectStoreName){\r\n            if(!this.hasObjectStore(objectStoreName)){\r\n                this.db.deleteObjectStore(objectStoreName);\r\n                console.log('删除了新的ObjectStore：' + objectStoreName + '。');\r\n            }else{\r\n                console.log('ObjectStore：' + objectStoreName + '不存在。');\r\n            }\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * 获取操作ObjectStore\r\n         * @param {String} objectStoreName: ObjectStore名字\r\n         * @param {Boolean} writeAble     : 只读还是读写\r\n         *\r\n         */\r\n        this.getObjectStore = function(objectStoreName, writeAble = true){\r\n            return new ObjectStore(this.db, objectStoreName, writeAble);\r\n        };\r\n\r\n        // 绑定函数\r\n        this.request.addEventListener('success', this._requestSuccess.bind(this), false);\r\n        this.request.addEventListener('error', this._requestError.bind(this), false);\r\n        this.request.addEventListener('upgradeneeded', this._requestUpgradeneeded.bind(this), false);\r\n\r\n        // 返回\r\n        return this;\r\n\r\n    };\r\n\r\n\r\n    /* objectsSore */\r\n\r\n    /* 初始化 */\r\n    function ObjectStore(db, objectStoreName, writeAble){\r\n\r\n        this.db = db;\r\n\r\n        const wa = writeAble === true ? 'readwrite' : 'readonly';\r\n        const transaction = this.db.transaction(objectStoreName, wa);\r\n\r\n        this.store = transaction.objectStore(objectStoreName);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 添加数据\r\n     * @param {Object | Array} obj: 数组添加多个数据，object添加单个数据\r\n     *\r\n     */\r\n    ObjectStore.prototype.add = function(obj){\r\n        IndexedDB._funIng = true;\r\n        obj = obj instanceof Array ? obj : [obj];\r\n        for(let i = 0, j = obj.length - 1; i <= j; i++){\r\n            this.store.add(obj[i]);\r\n            if(i == j){\r\n                console.log('数据添加成功');\r\n                IndexedDB._funIng = false;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * 更新数据\r\n     * @param {Object | Array} obj: 数组添加多个数据，object添加单个数据\r\n     *\r\n     */\r\n    ObjectStore.prototype.put = function(obj){\r\n        IndexedDB._funIng = true;\r\n        obj = obj instanceof Array ? obj : [obj];\r\n        for(let i = 0, j = obj.length - 1; i <= j; i++){\r\n            this.store.put(obj[i]);\r\n            if(i == j){\r\n                console.log('数据更新成功');\r\n                IndexedDB._funIng = false;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * 删除数据\r\n     * @param {String | Number | Array} value: 数组添加多个数据，object添加单个数据\r\n     *\r\n     */\r\n    ObjectStore.prototype.delete = function(value){\r\n        IndexedDB._funIng = true;\r\n        value = value instanceof Array ? value : [value];\r\n        for(let i = 0, j = value.length - 1; i <= j; i++){\r\n            this.store.delete(value[i]);\r\n            if(i == j){\r\n                console.log('数据删除成功');\r\n                IndexedDB._funIng = false;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /* 清除数据 */\r\n    ObjectStore.prototype.clear = function(value){\r\n        this.store.clear();\r\n        console.log('数据清除成功');\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * 获取数据\r\n     * @param {String | Number} value: 键值\r\n     * @param {Function} callback    : 获取成功的回调函数\r\n     *\r\n     */\r\n    ObjectStore.prototype.get = function(value, callback){\r\n        const g = this.store.get(value);\r\n\r\n        function success(event){\r\n            if(callback){\r\n                callback.call(this, event.target.result, event.target);\r\n            }\r\n        }\r\n\r\n        g.addEventListener('success', success.bind(this), false);\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * 游标\r\n     * @param {String} indexName               : 索引名\r\n     * @param {String | Number | Boolean} range: 查询范围：有等于，大于等于，小于，小于等于，区间\r\n     * @param {Function} callback              : 查询成功的回调函数\r\n     *\r\n     * result.value\r\n     * result.continue()\r\n     *\r\n     */\r\n    ObjectStore.prototype.cursor = function(indexName /*, range, callback */){\r\n\r\n        const callback = typeof arguments[1] === 'function' ? arguments[1] : arguments[2];\r\n\r\n        const index = this.store.index(indexName);\r\n        const range = arguments[2] ? getRange(arguments[1]) : null;\r\n        const cursor = range === null ? index.openCursor() : index.openCursor(range);\r\n\r\n\r\n        function success(event){\r\n            if(callback){\r\n                callback.call(this, event.target.result, event.target);\r\n            }\r\n        }\r\n\r\n        cursor.addEventListener('success', success.bind(this), false);\r\n\r\n        return this;\r\n    };\r\n\r\n    _window.IndexedDB = IndexedDB;\r\n});\r\n\r\n"]}